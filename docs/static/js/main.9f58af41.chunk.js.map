{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAmB9C,OACQ,sBAAMC,SAZM,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOV,SACI,uBACAO,KAAO,OACPC,MAAUT,EACVU,SApBa,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFDS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAW,WACR1B,EAAQC,GACE0B,MAAM,SAAAC,GAEHC,YAAY,WACRJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEf,UAGf,CAACtB,IAEGuB,EDhB4BM,CAAa7B,GAAhCa,EAFmB,EAExBN,KAAae,EAFW,EAEXA,QAGxB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAEnDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAIaL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aElBtBmB,EAAe,WAAM,MAGM5C,mBAAS,CAAC,kBAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAS9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEO8C,EAAWtB,KAAK,SAAAT,GAAQ,OACX,cAAC,EAAD,CAEAA,SAAWA,GADJA,YChBvCgC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.9f58af41.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n   const [inputValue, setInputValue] = useState('');\r\n    \r\n   const handleInputChange = (e) => {\r\n       setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n       e.preventDefault();\r\n\r\n       if (inputValue.trim().length>2){\r\n        setCategories(cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n       }\r\n       //console.log('submit hecho');\r\n       \r\n   }\r\n\r\n    return (\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n                 />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=20&api_key=Dva2dV8Wkw8eeRnaW54W80vt7VpP6uAV`;\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }) \r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n          <img src={url} alt={title}></img>\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n       const { data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n\r\n        {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n       <div className=\"card-grid\">\r\n           \r\n            \r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem\r\n                        key = {img.id} \r\n                        {...img}/>\r\n                    )\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n       getGifs(category)\r\n                .then( imgs =>{\r\n\r\n                    setTimeout( () => {\r\n                        setstate({\r\n                            data: imgs,\r\n                            loading: false\r\n                        });\r\n                    },2000);\r\n\r\n                })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n   // const handleAdd = () => {\r\n   //     setCategories( [...categories, 'HunterXHunter'] );\r\n   // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n               {\r\n                   categories.map( category => \r\n                                <GifGrid \r\n                                key = {category} \r\n                                category= {category} />\r\n                   )\r\n               }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}